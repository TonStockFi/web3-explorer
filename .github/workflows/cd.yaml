name: Web3Explorer CD
on:
    push:
        tags:
            - v*
env:
    node-version: 20.11.1

permissions:
    contents: write # Grant write access to contents for release creation

jobs:
    desktop-build:
        name: desktop-build
        needs: release
        strategy:
            matrix:
                include:
                    - os: windows-latest
                      command: make:intel
                      tag: x64
                      dist: /apps/desktop/out/make/squirrel.windows/x64/*Setup.exe
                    - os: macos-13
                      tag: x64
                      command: make:mac
                    # - os: macos-13
                    #   tag: arm
                    #   command: make:arm
                    # - os: macos-13
                    #   tag: universal
                    #   command: make:universal
        runs-on: ${{ matrix.os }}
        timeout-minutes: 30
        env:
            VERSION: 1.0.56
            PROJECT_NAME: Web3Explorer
            APPLE_API_KEY: ${{ github.workspace }}/AuthKey.p8
            APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
            APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
            REACT_APP_AMPLITUDE: ${{ secrets.REACT_APP_AMPLITUDE }}
            REACT_APP_TG_BOT_ID: ${{ secrets.REACT_APP_TG_BOT_ID }}
            REACT_APP_TONCONSOLE_API: https://pro.tonconsole.com
            REACT_APP_TG_BOT_ORIGIN: https://tonkeeper.com
            REACT_APP_APTABASE: ${{ secrets.VITE_APP_APTABASE }}
            REACT_APP_APTABASE_HOST: https://anonymous-analytics.tonkeeper.com
            REACT_APP_STONFI_REFERRAL_ADDRESS: ${{ secrets.REACT_APP_STONFI_REFERRAL_ADDRESS }}
            DEBUG: electron*
            GITHUB_REPOSITORY: ${{ github.repository }}
            MAKE_OUT_DIR: ${{ github.workspace }}/apps/desktop/out/make
            GH_TOKEN: ${{ github.token }}
        steps:
            - name: Checkout to git repository
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.node-version }}
            - name: Enable Corepack
              run: |
                  corepack enable

            - name: Decode service account into a file
              if: runner.os == 'macOS'
              env:
                  CREDENTIALS: ${{ secrets.APPLE_API_KEY }}
              run: |
                  echo $CREDENTIALS | base64 -d > ${{ github.workspace }}/AuthKey.p8
            - name: Configure keychain
              if: runner.os == 'macOS'
              uses: apple-actions/import-codesign-certs@v3
              with:
                  p12-file-base64: ${{ secrets.IDENTITY_P12_B64 }}
                  p12-password: ${{ secrets.IDENTITY_PASSPHRASE }}

            - name: Run install
              uses: borales/actions-yarn@v5
              with:
                  cmd: install

            - name: Build Pkg
              run: |
                  cd ${{ github.workspace }}
                  yarn workspace @tonkeeper/locales build:rm
                  yarn build:pkg
                  echo "export { App } from '@web3-explorer/app/dist/src/desktop/App';" > apps/desktop/src/app/App.tsx

            - name: Run build intel distributive
              uses: borales/actions-yarn@v5
              with:
                  cmd: ${{ matrix.command }}
                  dir: 'apps/desktop'

            - name: Release Upload assets on Win32
              if: runner.os == 'Windows'
              env:
                  tag: ${{ github.ref_name }}
              run: |
                  dir ${{ github.workspace }}/apps/desktop/out/make/zip/win32/x64
                  gh release upload ${{ github.ref_name }} "${{env.MAKE_OUT_DIR}}/zip/win32/x64/${{env.PROJECT_NAME}}-win32-x64-${{env.VERSION}}.zip"
                  dir ${{ github.workspace }}/apps/desktop/out/make/squirrel.windows/x64
                  gh release upload ${{ github.ref_name }} "${{env.MAKE_OUT_DIR}}/squirrel.windows/x64/${{env.PROJECT_NAME}}-${{env.VERSION}} Setup.exe"

            - name: Release Upload assets on mac
              if: runner.os != 'Windows'
              run: |
                  tree ${{env.MAKE_OUT_DIR}}

            - name: Clean-up credentials
              if: always() && runner.os == 'macOS'
              run: |
                  rm ${{ github.workspace }}/AuthKey.p8
    release:
        name: Release pushed tag
        runs-on: ubuntu-22.04
        steps:
            - name: Create release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ github.ref_name }}
              run: |
                  if gh release view "$tag" --repo="$GITHUB_REPOSITORY" &> /dev/null; then
                    echo "Release $tag already exists."
                  else
                    gh release create "$tag" \
                        --repo="$GITHUB_REPOSITORY" \
                        --title="${tag}" \
                        --draft \
                        --generate-notes
                    echo "Release $tag created."
                  fi
